syntax = "proto3";

service Raft {
  rpc RequestVote (VoteRequest) returns (VoteResponse);
  rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc FragmentNetwork (NetworkFragmentationRequest) returns (NetworkFragmentationResponse);

  // RPC for snapshot installation
  rpc InstallSnapshot (InstallSnapshotRequest) returns (InstallSnapshotResponse);
}

message VoteRequest {
  int32 term = 1;
  int32 candidate_id = 2;
  int32 last_log_index = 3;  // Index of candidate's last log entry
  int32 last_log_term = 4;   // Term of candidate's last log entry
}

message VoteResponse {
  int32 term = 1;
  bool vote_granted = 2;
}

message AppendEntriesRequest {
  int32 term = 1;
  int32 leader_id = 2;
  repeated LogEntry entries = 3;
  int32 leader_commit = 4;
  int32 prev_log_index = 5;
  int32 prev_log_term = 6;
}

message AppendEntriesResponse {
  int32 term = 1;
  bool success = 2;
}

message LogEntry {
  int32 term = 1;
  string command = 2;
}

message NetworkFragmentationRequest {
  repeated int32 disconnected_nodes = 1;
}

message NetworkFragmentationResponse {
  bool success = 1;
}

message InstallSnapshotRequest {
  int32 term = 1;
  int32 leader_id = 2;
  string snapshot_data = 3;
  int32 last_included_index = 4;
  int32 last_included_term = 5;
}

message InstallSnapshotResponse {
  int32 term = 1;
}
